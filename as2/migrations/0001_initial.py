# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2019-09-16 16:19
from __future__ import unicode_literals

import as2.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='InboundFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=b'uploads/')),
                ('sender', models.CharField(max_length=255, null=True)),
                ('receiver', models.CharField(max_length=255, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('processed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[(b'S', 'Success'), (b'E', 'Error'), (b'W', 'Warning')], max_length=2)),
                ('text', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='MDN',
            fields=[
                ('message_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[(b'S', 'Sent'), (b'R', 'Received'), (b'P', 'Pending')], max_length=2)),
                ('file', models.CharField(max_length=500)),
                ('headers', models.TextField(null=True)),
                ('return_url', models.URLField(null=True)),
                ('signed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('message_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('headers', models.TextField(null=True)),
                ('direction', models.CharField(choices=[(b'IN', 'Inbound'), (b'OUT', 'Outbound')], max_length=5)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[(b'S', 'Success'), (b'E', 'Error'), (b'W', 'Warning'), (b'P', 'Pending'), (b'R', 'Retry'), (b'IP', 'In Process')], max_length=2)),
                ('adv_status', models.CharField(max_length=255, null=True)),
                ('compressed', models.BooleanField(default=False)),
                ('encrypted', models.BooleanField(default=False)),
                ('signed', models.BooleanField(default=False)),
                ('mic', models.CharField(max_length=100, null=True)),
                ('mdn_mode', models.CharField(choices=[(b'SYNC', 'Synchronous'), (b'ASYNC', 'Asynchronous')], max_length=5, null=True)),
                ('retries', models.IntegerField(null=True)),
                ('mdn', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='omessage', to='as2.MDN')),
            ],
        ),
        migrations.CreateModel(
            name='MessageReceived',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.CharField(help_text='Id of a Message Recieved', max_length=255, verbose_name='Message Id')),
                ('processed', models.BooleanField(default=False, verbose_name='Processed')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('name', models.CharField(max_length=100, verbose_name='Organization Name')),
                ('as2_name', models.CharField(max_length=100, primary_key=True, serialize=False, verbose_name='AS2 Identifier')),
                ('email_address', models.EmailField(blank=True, max_length=254, null=True)),
                ('confirmation_message', models.CharField(blank=True, help_text='Use this field to send a customized message in the MDN Confirmations for this Organization', max_length=300, null=True, verbose_name='Confirmation Message')),
            ],
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('confirmation_message', models.CharField(blank=True, help_text='Use this field to send a customized message in the MDN Confirmations for this Partner', max_length=300, null=True, verbose_name='Confirmation Message')),
                ('name', models.CharField(max_length=100, verbose_name='Partner Name')),
                ('as2_name', models.CharField(max_length=100, primary_key=True, serialize=False, verbose_name='AS2 Identifier')),
                ('email_address', models.EmailField(blank=True, max_length=254, null=True)),
                ('http_auth', models.BooleanField(default=False, verbose_name='Enable Authentication')),
                ('http_auth_user', models.CharField(blank=True, max_length=100, null=True)),
                ('http_auth_pass', models.CharField(blank=True, max_length=100, null=True)),
                ('https_ca_cert', models.FileField(blank=True, max_length=500, null=True, upload_to=as2.models.get_certificate_path, verbose_name='HTTPS Local CA Store')),
                ('target_url', models.URLField()),
                ('subject', models.CharField(default='EDI Message sent using pyas2', max_length=255)),
                ('content_type', models.CharField(choices=[(b'application/EDI-X12', b'application/EDI-X12'), (b'application/EDIFACT', b'application/EDIFACT'), (b'application/edi-consent', b'application/edi-consent'), (b'application/XML', b'application/XML')], default=b'application/edi-consent', max_length=100)),
                ('compress', models.BooleanField(default=True, verbose_name='Compress Message')),
                ('encryption', models.CharField(blank=True, choices=[(b'des_ede3_cbc', b'3DES'), (b'des_cbc', b'DES'), (b'aes_128_cbc', b'AES-128'), (b'aes_192_cbc', b'AES-192'), (b'aes_256_cbc', b'AES-256'), (b'rc2_40_cbc', b'RC2-40')], max_length=20, null=True, verbose_name='Encrypt Message')),
                ('signature', models.CharField(blank=True, choices=[(b'sha1', b'SHA-1')], max_length=20, null=True, verbose_name='Sign Message')),
                ('mdn', models.BooleanField(default=False, verbose_name='Request MDN')),
                ('mdn_mode', models.CharField(blank=True, choices=[(b'SYNC', b'Synchronous'), (b'ASYNC', b'Asynchronous')], max_length=20, null=True)),
                ('mdn_sign', models.CharField(blank=True, choices=[(b'sha1', b'SHA-1')], max_length=20, null=True, verbose_name='Request Signed MDN')),
                ('keep_filename', models.BooleanField(default=False, help_text='Use Original Filename to to store file on receipt, use this option only if you are sure partner sends unique names', verbose_name='Keep Original Filename')),
                ('cmd_send', models.TextField(blank=True, help_text='Command executed after successful message send, replacements are $filename, $sender, $recevier, $messageid and any message header such as $Subject', null=True, verbose_name='Command on Message Send')),
                ('cmd_receive', models.TextField(blank=True, help_text='Command executed after successful message receipt, replacements are $filename, $fullfilename, $sender, $recevier, $messageid and any message header such as $Subject', null=True, verbose_name='Command on Message Receipt')),
            ],
        ),
        migrations.CreateModel(
            name='Payload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('content_type', models.CharField(max_length=255)),
                ('file', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='PrivateCertificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate', models.FileField(max_length=500, upload_to=as2.models.get_certificate_path)),
                ('ca_cert', models.FileField(blank=True, max_length=500, null=True, upload_to=as2.models.get_certificate_path, verbose_name='Local CA Store')),
                ('certificate_passphrase', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PublicCertificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate', models.FileField(max_length=500, upload_to=as2.models.get_certificate_path)),
                ('ca_cert', models.FileField(blank=True, max_length=500, null=True, upload_to=as2.models.get_certificate_path, verbose_name='Local CA Store')),
                ('verify_cert', models.BooleanField(default=True, help_text='Uncheck this option to disable certificate verification.', verbose_name='Verify Certificate')),
            ],
        ),
        migrations.CreateModel(
            name='Routes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the Route', max_length=255, verbose_name='Name')),
                ('url', models.CharField(max_length=255, verbose_name='QU4RTET URL')),
                ('username', models.CharField(max_length=255, verbose_name='Username')),
                ('password', models.CharField(max_length=255, verbose_name='Password')),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='as2.Partner')),
            ],
        ),
        migrations.AddField(
            model_name='partner',
            name='encryption_key',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enc_partner', to='as2.PublicCertificate'),
        ),
        migrations.AddField(
            model_name='partner',
            name='signature_key',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sign_partner', to='as2.PublicCertificate'),
        ),
        migrations.AddField(
            model_name='organization',
            name='encryption_key',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enc_org', to='as2.PrivateCertificate'),
        ),
        migrations.AddField(
            model_name='organization',
            name='signature_key',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sign_org', to='as2.PrivateCertificate'),
        ),
        migrations.AddField(
            model_name='message',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='as2.Organization'),
        ),
        migrations.AddField(
            model_name='message',
            name='partner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='as2.Partner'),
        ),
        migrations.AddField(
            model_name='message',
            name='payload',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='message', to='as2.Payload'),
        ),
        migrations.AddField(
            model_name='log',
            name='message',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='as2.Message'),
        ),
    ]
